- !<NativePackageDescriptor/d319613a-bf51-41e8-a70a-2890d9e5245f>
  PackagePath: ""
  StudioVersion:
    major: 5
    minor: 14
    patch: 0
    build: 25091606
    type: Unset
    buildFlavor: ""
    timestamp: 0
    commit: ""
  Description: |-
    Description: Script for managing animation states and transitions in a component-based animation system.
    It allows the creation of animation states from single clips or blend trees, defines parameters for controlling 
    animations, and sets up transitions between states based on conditions. The script includes functionality for 
    debugging and visualizing the state machine and its parameters.
    
    
    api examples :
    // You can add a parameter to control animations by calling the addParameter method with the parameter name and default value.
    
    // script.addParameter("speed", "Float", 1.0);
    
    // To set the value of a parameter, use the setParameter method with the parameter name and the new value.
    // script.setParameter("speed", 1.5);
    
    // Set a trigger by calling setTrigger with the trigger name.
    // script.setTrigger("jump");
    
    // Reset a trigger by calling resetTrigger with the trigger name.
    // script.resetTrigger("jump");
    
    // Get a state to add callbacks or query its status using getState.
    
    // let runState = script.getState("Run");
    // runState.onEnter.add(function() \{
    //     print("Entered Run state");
    // \});
    
    // Force a state change immediately or with a transition duration by calling setState.
    
    // script.setState("Idle", 0); // Immediately change to Idle state
    // script.setState("Run", 0.5); // Transition to Run state over 0.5 seconds
    
    
    // Define a new state from a configuration object using addStateFromConfig.
    
    // let state = \{
    //     stateName: "Run",
    //     source: 0, // From Single Clip
    //     clipName: "RunAnimationClip"
    // \};
    // script.addStateFromConfig(state);
    
    // Define a transition from a configuration object using addTransitionFromConfig.
    // let transition = \{
    //     enabled: true,
    //     fromStateType: 0, // Specific state
    //     fromStateName: "Idle",
    //     toStateType: 0, // Specific state
    //     toStateName: "Run",
    //     duration: 0.5,
    //     hasExitTime: false,
    //     conditions: [
    //         \{
    //             paramName: "speed",
    //             type: "Float",
    //             funcFloat: "IsGreater",
    //             valueFloat: 0.5
    //         \}
    //     ]
    // \};
    // script.addTransitionFromConfig(transition);
  SvgIcon: |
    <svg width="142" height="136" viewBox="0 0 142 136" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect x="0.774902" y="118.111" width="117.81" height="22.7587" rx="8.5" transform="rotate(-45 0.774902 118.111)" fill="#ADFF00"/>
    <rect x="63.9004" y="8.03247" width="85.1776" height="19.2215" rx="8" transform="rotate(45 63.9004 8.03247)" fill="#ADFF00"/>
    <rect x="61.0464" y="60.2436" width="59.318" height="22.7587" rx="10" transform="rotate(45 61.0464 60.2436)" fill="#ADFF00"/>
    <rect x="103.177" y="102.756" width="46.8301" height="20.3636" rx="10" transform="rotate(135 103.177 102.756)" fill="#ADFF00"/>
    <rect x="142" y="50.7217" width="39.2567" height="16.5771" rx="8" transform="rotate(135 142 50.7217)" fill="#ADFF00"/>
    <rect x="74.406" y="21.2818" width="38.3103" height="16.5946" rx="8" transform="rotate(135 74.406 21.2818)" fill="#ADFF00"/>
    <circle cx="111.891" cy="18.7425" r="18.7425" fill="#ADFF00"/>
    </svg>

  SetupScript:
    code: ""
  VersionMajor: 1
  VersionMinor: 0
  VersionPatch: 1
  UpdateCheckpoint: 75
  ExportUid: a83e876b-2577-4eeb-ad33-99cfa2bf962c
  ComponentUid: ccb519a6-7cab-4a1f-8df2-aa355f5f5b1a
  PackagePolicy: CanBeUnpacked
  ReadMe: !<reference> 00000000-0000-0000-0000-000000000000
  Tags:
    []
  Attachments:
    []
  Instantiable: !<reference> a36e70df-3e7b-4dee-9510-ee7bcb2ff77c
  AssetLibraryDependencyStructure: !<AssetLibraryDependencyStructure>
    Name: Animation State Manager
    AssetId: 6R3v0yl3qs23lF98eCSsWa
    Hash: fe058d1d2068e48d627e88ad4ee9dde8
    Version:
      major: 1
      minor: 3
      patch: 1
      build: 0
